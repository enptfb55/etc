" Filename:      etc/vim/vimrc
" Last modified: 2016.03.07

set runtimepath+=${HOME}/etc/vim

" automatic reloading of .vimrc
autocmd! bufwritepost ${HOME}/etc/vim/vimrc source %

" set up utf-8 encoding so that certain characters in listchars can be used.
scriptencoding utf-8
set encoding=utf-8


" vundle shit
"
"
set nocompatible                  " This must be first because it changes other options as side effect
filetype off                      " Disable filetype detection.
set rtp+=~/.vim/bundle/Vundle.vim " Add Vundle to the path.
call vundle#begin()               " Some kind of Vundle magic.

" let Vundle manage Vundle (required).
Plugin 'VundleVim/Vundle.vim'

" alternate between h and cpp files.
Plugin 'a.vim'

" c++11/14 syntax highlighting
Plugin 'octol/vim-cpp-enhanced-highlight'

" easy commenting
Plugin 'tpope/vim-commentary'

" solarized color scheme
Plugin 'altercation/vim-colors-solarized'

call vundle#end()

filetype on
filetype plugin indent on


" editing behavior
"
"
set backspace=indent,eol,start  " allow backspacing over everything in insert mode.
set wrap                        " wrap lines at window edge.

"set autoindent                  " copy indent size from current line to new line.
set copyindent                  " copy previous line's indent characters.
set expandtab                   " insert spaces instead of tabs.
set shiftround                  " use multiple of shiftwidth when indenting with '<' and '>'.
set shiftwidth=4                " number of spaces to use for autoindenting.
set smarttab                    " treat 4 spaces as a tab when deleting.
set tabstop=4                   " tabs are replaced by 4 spaces.


" c-indent config
set cindent
set cinoptions=:0               " put case labels in same column as switch
set cinoptions+=l1              " align } with case label
set cinoptions+=b1              " align break with case label
set cinoptions+=g0              " align c++ scope specifiers at same column as block
set cinoptions+=N-s             " don't indent inside namespaces
set cinoptions+=+2s             " indent a continuation line 2 * shiftwidth
set cinoptions+=#1              " allow indenting of preprocessor lines
set cinkeys+=0=break            " assist in lining up break with case statements


" searching
set hlsearch                    " highlight search terms.
set ignorecase                  " ignore case when searching.
set incsearch                   " show search matches as you type.
set smartcase                   " ignore case if search pattern is all lowercase, case-sensitive otherwise.

set list                        " display unprintable characters
set listchars=tab:»·
set listchars+=trail:·
set listchars+=extends:>
set listchars+=precedes:<
set listchars+=nbsp:·

if exists('+relativenumber')
    set relativenumber          " always show (relative) line numbers.
endif

if exists('+colorcolumn')
    set colorcolumn=100         " draw a line down a specific column
endif

set numberwidth=3               " reduce the size of the gutter column (where line numbers show up).
set scrolloff=4                 " keep 4 lines off the edges of the screen when scrolling.

set showmatch                   " show matching parentheses.
set pastetoggle=<F2>            " when in insert mode, press <F2> to go to paste mode, where you can paste mass data that won't be autoindented.
set mouse=a                     " enable the mouse if the terminal supports it.

set formatoptions+=j            " delete comment character when joining commented lines
set nojoinspaces                " only insert single space after joining lines

" Speed up scrolling of the viewport slightly.
nnoremap <C-e> 2<C-e>
nnoremap <C-y> 2<C-y>


" Editor layout
set termencoding=utf-8
set laststatus=2                " Tell vim to always put a status line in, even if there is only one window.
set showtabline=2               " Show a tabbar on top, always


" Vim behavior
set history=10000               " Number of commands and search history to remember.
set nobackup                    " Do not keep backup files.
set noerrorbells                " Don't beep. Ever.
set noswapfile                  " Don't produce .swp files.
set ruler                       " Show cursor position all the time.
set showcmd                     " Show partial command in the last line of the screen. This also shows visual selection info.
set title                       " Show the filename in the window title.
set undolevels=1000             " Lots of undo history.
set viminfo='20,\"80            " Read/write a .viminfo file, but don't store more than 80 lines of registers.
set viminfo+=n${HOME}/var/vim/viminfo " change location of the viminfo file.
set wildmenu                    " Use enhanced command line completion.
set wildignore=*.a,*.o,*.pyc,*.so " Ignore these files in file completion.
set wildmode=longest,list       " Make tab completion for files/buffers act like bash.
set splitbelow                  " New horizontal-split window appears on bottom.
set splitright                  " New vertical-split window appears on right.

" Turn off netrw history
let g:netrw_dirhistmax = 0

" for solarized plugin (color scheme)
" https://github.com/altercation/vim-colors-solarized
syntax enable " allow for syntax highlighting (NOT 'syntax on' which turns on default highlighting)
set background=dark
let g:solarized_termcolors=256
silent! colorscheme solarized


" Shortcuts
"
"

" No more having to type ':', just type ';' (saves hitting the shift key)
nnoremap ; :

" Change the mapleader from \ to ,
let g:mapleader=","

" Easy window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" Clears the search register by typing ',' then '/'
nmap <silent> <leader>/ :nohlsearch<CR>

" Quickly get out of insert mode by typing 'jk'
inoremap jk <Esc>


" Filetype specific handling.
" (Only do this part when compiled with support for autocommands.)
"
"
if has("autocmd")

    " turn off 'spaces instead of tabs' for editing makefiles
    autocmd FileType make setlocal noexpandtab

    " use c++-style comments for c++ files (for vim commentary plugin)
    autocmd FileType cpp setlocal commentstring=//\ %s

endif " has("autocmd")


" This is here so that tmux will send xterm-style keys when its xterm-keys option is on.
if &term =~ '^screen'
    execute "set <xUp>=\e[1;*A"
    execute "set <xDown>=\e[1;*B"
    execute "set <xRight>=\e[1;*C"
    execute "set <xLeft>=\e[1;*D"
endif


" Alt-j/k inserts blank line below/above current line.
nnoremap <silent><A-j> :put =''<CR>
nnoremap <silent><A-k> :put! =''<CR>


" Change cursor in terminal vim (and under tmux).
if &term =~ '^xterm' || &term =~ '^screen'

    " 1 or 0 -> blinking block
    " 2 -> solid block
    " 3 -> blinking underscore
    " 4 -> solid underscore

    " Solid underscore in insert mode
    let &t_SI .= "\<Esc>[4 q"

    " Blinking block in command mode
    let &t_EI .= "\<Esc>[1 q"

endif


" fix for weird iskeyword settings.
set iskeyword-=-
set iskeyword-=+

" allow clicking past 220 columns in tmux
if has("mouse_sgr")
    set ttymouse=sgr
else
    set ttymouse=xterm2
end
