" Filename:      etc/vim/vimrc
" Last modified: 2016.03.25
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


set runtimepath+=${HOME}/etc/vim


" vundle shit
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

" this must be first because it changes other options as side-effects
set nocompatible

" disable filetype detection
filetype off

" add vundle to the path
set rtp+=~/.vim/bundle/Vundle.vim

" list plugins with vundle begin and end
call vundle#begin()

" let Vundle manage Vundle (required)
Plugin 'VundleVim/Vundle.vim'

" alternate between h and cpp files
Plugin 'a.vim'

" c++11/14 syntax highlighting
Plugin 'octol/vim-cpp-enhanced-highlight'

" easy commenting
Plugin 'tpope/vim-commentary'

" solarized color scheme
Plugin 'altercation/vim-colors-solarized'

" jellybeans color scheme
Plugin 'nanotech/jellybeans.vim'

call vundle#end()

" re-enable filetype detection
filetype on

" enable loading of plugins for specific filetypes
filetype plugin on

" enable loading indent for specific filetypes
filetype indent on


" key re-mapping
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

" no more having to type ':', just type ';'
nnoremap ; :

" change the mapleader from '\' to ','
let g:mapleader=","

" ctrl-h/j/k/l to navigate between windows
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" quickly get out of insert mode by typing 'jk'
inoremap jk <Esc>

" send xterm-style keys when tmux's xterm-keys option is on
if &term =~ '^screen' || &term =~ '^tmux'
    execute "set <xUp>=\e[1;*A"
    execute "set <xDown>=\e[1;*B"
    execute "set <xRight>=\e[1;*C"
    execute "set <xLeft>=\e[1;*D"
endif

" alt-j/k inserts blank line below/above current line
nnoremap <silent><A-j> :put =''<CR>
nnoremap <silent><A-k> :put! =''<CR>


" custom commands
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

" save files using sudo with 'W'
command! W :execute ':silent w !sudo tee % > /dev/null' | :edit!

" automatically reload vimrc when saved
autocmd! bufwritepost ${HOME}/etc/vim/vimrc source %


" appearance
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

" turn on utf-8 all over the place
scriptencoding utf-8
set encoding=utf-8
set termencoding=utf-8

" allow for syntax highlighting (NOT 'syntax on' which turns on vim's
" default highlighting)
syntax enable

" notify all schemes that we're using a dark background
set background=dark

" colorscheme: solarized
"       https://github.com/altercation/vim-colors-solarized
" let g:solarized_termcolors=256
" silent! colorscheme solarized

" colorscheme: jellybeans
"       https://github.com/nanotech/jellybeans.vim
silent! colorscheme jellybeans

" customize color of ColorColumn
highlight ColorColumn ctermbg=235 ctermfg=white

" display unprintable characters
set list
set listchars=tab:»·
set listchars+=trail:·
set listchars+=extends:>
set listchars+=precedes:<
set listchars+=nbsp:·

" always show (relative) line numbers
set relativenumber

" draw a line down a specific column
set colorcolumn=100

" reduce the size of the gutter column (where line numbers show up)
set numberwidth=3

" keep 4 lines off the edges of the screen when scrolling
set scrolloff=4

" show matching parentheses
set showmatch

" always show the status line, even if there is only one window
set laststatus=2

" show a tab bar on top at all times
set showtabline=2

" always show cursor position
set ruler

" show partial command in the last line of the screen
set showcmd


" c-indent config
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

set cindent

" put case labels in same column as switch
set cinoptions=:0

" align } with case label
set cinoptions+=l1

" align break with case label
set cinoptions+=b1

" align c++ scope specifiers at same column as block
set cinoptions+=g0

" don't indent inside namespaces
set cinoptions+=N-s

" indent a continuation line 2 * shiftwidth
set cinoptions+=+2s

" assist in lining up break with case statements
set cinkeys+=0=break

" set basic text width to 72 chars
set textwidth=72

" copy previous line's indent characters.
set copyindent

" insert spaces instead of tabs.
set expandtab

" use multiple of shiftwidth when indenting with '<' and '>'.
set shiftround

" number of spaces to use for autoindenting.
set shiftwidth=4

" treat 4 spaces as a tab when deleting.
set smarttab

" tabs are replaced by 4 spaces.
set tabstop=4

" change cursor in terminal vim (and under tmux)
if &term =~ '^xterm' || &term =~ '^screen' || &term =~ '^tmux'

    " 1 or 0: blinking block
    " 2:      solid block
    " 3:      blinking underscore
    " 4:      solid underscore

    " solid underscore in insert mode
    let &t_SI .= "\<Esc>[4 q"

    " blinking block in command mode
    let &t_EI .= "\<Esc>[1 q"

endif


" editing behavior
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

" allow backspacing over everything in insert mode.
set backspace=indent,eol,start

" wrap lines at window edge.
set wrap

" press <F2> to enter paste-mode
set pastetoggle=<F2>

" enable mouse
set mouse=a

" delete comment character when joining commented lines
set formatoptions+=j

" only insert single space after joining lines
set nojoinspaces

" fix for weird iskeyword settings.
set iskeyword-=-
set iskeyword-=+

" allow clicking past 220 columns in tmux
if has("mouse_sgr")
    set ttymouse=sgr
else
    set ttymouse=xterm2
end


" searching
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

" highlight search terms
set hlsearch

" ignore case when searching
set ignorecase

" show search matches as you type
set incsearch

" ignore case if pattern is all lowercase, case-sensitive otherwise
set smartcase

" clears the search register by typing ',' then '/'
nmap <silent> <leader>/ :nohlsearch<CR>


" filetype-specific handling
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

" turn off 'spaces instead of tabs' for editing makefiles
autocmd FileType make setlocal noexpandtab

" use c++-style comments for c++ files (for vim commentary plugin)
autocmd FileType cpp setlocal commentstring=//\ %s


" vim behavior
" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

" number of commands and search history to remember
set history=10000

" do not keep backup files
set nobackup

" don't beep. ever
set noerrorbells

" don't produce .swp files
set noswapfile

" lots of undo history
set undolevels=1000

" read/write .viminfo file, but don't store more than 80 registers
set viminfo='20,\"80

" change location of the viminfo file
set viminfo+=n${HOME}/var/vim/viminfo

" use enhanced command line completion
set wildmenu

" ignore these files in file completion
set wildignore=*.a,*.o,*.pyc,*.so

" make tab completion for files/buffers act like bash
set wildmode=longest,list

" new horizontal-split window appears on bottom
set splitbelow

" new vertical-split window appears on right
set splitright

" turn off netrw history
let g:netrw_dirhistmax = 0

" speed up scrolling of the viewport
nnoremap <C-e> 2<C-e>
nnoremap <C-y> 2<C-y>
