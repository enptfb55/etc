# Filename:      etc/bash/bashrc
# Last modified: 2016.04.26
#
# This file is only sourced by interactive non-login shells.

#set -x

# set vim bindings
set -o vi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]$PWD\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt


# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi
alias cgrep='grep --color=auto --include=\*.c --include=\*.cpp --include=\*.h --include=\*.hpp '


# ls aliases
alias  l="ls --color=auto --group-directories-first --quoting-style=literal"
alias la="ls -l --all --classify --color=auto --group-directories-first --human-readable --quoting-style=literal"
alias ll="ls -l --classify --color=auto --group-directories-first --human-readable --quoting-style=literal"
alias lr="ls -lt --all --color=auto --group-directories-first --human-readable --quoting-style=literal --reverse"
alias ls="ls --color=auto --group-directories-first --quoting-style=literal"
alias sl="ls --color=auto --group-directories-first --quoting-style=literal"

# make aliases
alias   m="make"
alias  mc="make clean"
alias mdc="make distclean"
alias mcm="make clean && make"

# vim aliases
alias  vi="vim -O"
alias vim="vim -O"
alias vmi="vim -O"

# python aliases
alias python="python3"
alias pip="pip3"

alias cp="cp --interactive"
alias dc="cd"
alias df="df --human-readable"
alias dul="du --human-readable --summarize * | sort --human-numeric-sort --reverse"
alias free="free --mega"
alias loc="locate --database=${HOME}/var/mlocate/mlocate.db"
alias lsof_net="lsof -P -i 4 -n"
alias mount="mount | column -t"
alias mv="mv --interactive"
alias ns="netstat --numeric --tcp --all --udp --program --listening"
alias psc="ps xawf -eo pid,user,cgroup,args"
alias rmdirr="find . -type d -empty -delete"


# gdb
alias gdb="gdb --data-directory /mnt/backingTrees_el7_cmake/devtoolset-7/root/usr/share/gdb/"

# sudo 
alias sudo="/usr/bin/sudo"

# valgrind
export VALGRIND_LIB=/mnt/backingTrees_el7_cmake/devtoolset-7/root/usr/lib64/valgrind 
#/mnt/backingTrees_el7_cmake/devtoolset-7/root/usr/bin/valgrind

export RUBEDO_DB="DEV"


# calculator
calc()
{
    echo "$*" | bc --mathlib
} 
# configure less to show man pages in color
man()
{
    env LESS_TERMCAP_mb=$'\e[1;31m' \
        LESS_TERMCAP_md=$'\e[1;31m' \
        LESS_TERMCAP_me=$'\e[0m' \
        LESS_TERMCAP_se=$'\e[0m' \
        LESS_TERMCAP_so=$'\e[1;44;33m' \
        LESS_TERMCAP_ue=$'\e[0m' \
        LESS_TERMCAP_us=$'\e[1;32m' \
        man "$@"
}


# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# if the bashrc.d directory exists, source everything in there
if [[ -d "${HOME}/etc/bash/bashrc.$(uname).d" ]]; then
    for file in ${HOME}/etc/bash/bashrc.$(uname).d/*; do
        source "${file}"
    done
    unset file
fi

#echo $PS1

export ACLOCAL_PATH="/usr/local/share/aclocal"

# don't store tmux resurrect
export HISTCONTROL=${HISTCONTROL}:ignoreboth


source /mnt/backingTrees_el7_cmake/devtoolset-7/enable
export PATH="$PATH:/opt/mssql-tools/bin"
export PATH="$PATH:/opt/mssql-tools/bin"
export PATH="${PATH}:/mnt/backingTrees/HAP_usr_local/Linux.x86_64/bin/"
export PATH="${PATH}:/mnt/backingTrees/HAP_usr_local/OS.independent/bin"
export PATH="/usr/local/bin/:${PATH}"

export MY_CONDA_PATH="/mnt/qsgdata01/miniconda3/" 
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/mnt/qsgdata01/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/mnt/qsgdata01/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/mnt/qsgdata01/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/mnt/qsgdata01/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
export PATH="${MY_CONDA_PATH}/bin:$PATH"   


 #QSG
export WORKSPACE=/mnt/histcache/home/samato/workspace/


function setup_paths {
export QSG_UTIL_PATH=$WORKSPACE/UTIL/trunk/;
export QSG_DATA_PATH=$WORKSPACE/DATA/trunk/;
export QSG_STGY_PATH=$WORKSPACE/STGY/trunk/;
export QSG_SIGN_PATH=$WORKSPACE/SIGN/trunk/;
};
setup_paths
