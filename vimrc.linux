" Filename:      ~/dotfiles/vimrc.linux
" Last modified: 2015.12.05


" Set up utf-8 encoding so that certain characters in listchars can be used.
"
"
scriptencoding utf-8
set encoding=utf-8


" Vundle shit.
"
"
set nocompatible                " This must be first because it changes other options as side effect
filetype off                    " Disable filetype detection.
set rtp+=~/.vim/bundle/vundle   " Add Vundle to the path.
call vundle#rc()                " Some kind of Vundle magic.

" Let Vundle manage Vundle (required).
Bundle 'gmarik/vundle'

" Alternate between h and cpp files.
Bundle 'alternate'

" Easy commenting.
Bundle 'scrooloose/nerdcommenter'


filetype on
filetype plugin indent on
filetype plugin on


" Editing behavior
"
"
set backspace=indent,eol,start  " Allow backspacing over everything in insert mode.
set wrap                        " Wrap lines at window edge.

set expandtab                   " Insert spaces instead of tabs.
set tabstop=4                   " Tabs are replaced by 4 spaces.
set smarttab                    " Treat 4 spaces as a tab when deleting.
set autoindent                  " Copy indent size from current line to new line.
set copyindent                  " Copy previous line's indent characters.
set shiftwidth=4                " Number of spaces to use for autoindenting.
set shiftround                  " Use multiple of shiftwidth when indenting with '<' and '>'.

" Searching
set hlsearch                    " Highlight search terms.
set ignorecase                  " Ignore case when searching.
set smartcase                   " Ignore case if search pattern is all lowercase, case-sensitive otherwise.
set incsearch                   " Show search matches as you type.

set list                        " Display unprintable characters.
set listchars=tab:»·,trail:·,extends:#,nbsp:·

if exists('+relativenumber')
    set relativenumber          " Always show (relative) line numbers.
endif

if exists('+colorcolumn')
    set colorcolumn=100         " Draw a line down a specific column
endif

set numberwidth=3               " Reduce the size of the gutter column (where line numbers show up).
set scrolloff=4                 " Keep 4 lines off the edges of the screen when scrolling.

set showmatch                   " Show matching parentheses.
set pastetoggle=<F2>            " When in insert mode, press <F2> to go to paste mode, where you can paste mass data that won't be autoindented.
set mouse=a                     " Enable the mouse if the terminal supports it.


" Speed up scrolling of the viewport slightly.
nnoremap <C-e> 2<C-e>
nnoremap <C-y> 2<C-y>


" Editor layout
set termencoding=utf-8
set encoding=utf-8
set laststatus=2                " Tell vim to always put a status line in, even if there is only one window.
set showtabline=2               " Show a tabbar on top, always


" Vim behavior
set history=10000               " Number of commands and search history to remember.
set nobackup                    " Do not keep backup files.
set noerrorbells                " Don't beep. Ever.
set noswapfile                  " Don't produce .swp files.
set ruler                       " Show cursor position all the time.
set showcmd                     " Show partial command in the last line of the screen. This also shows visual selection info.
set title                       " Show the filename in the window title.
set undolevels=1000             " Lots of undo history.
set viminfo='20,\"80            " Read/write a .viminfo file, but don't store more than 80 lines of registers.
set wildmenu                    " Use enhanced command line completion.
set wildignore=*.a,*.o,*.pyc,*.so " Ignore these files in file completion.
set wildmode=longest,list       " Make tab completion for files/buffers act like bash.
set splitbelow                  " New horizontal-split window appears on bottom.
set splitright                  " New vertical-split window appears on right.

" Turn off netrw history
let g:netrw_dirhistmax = 0

syntax enable
syntax on

colorscheme my_inkpot

" Adjust "TODO" colors.
highlight Todo guifg=#40ffff guibg=#606060


" Shortcuts
"
"

" No more having to type ':', just type ';' (saves hitting the shift key)
nnoremap ; :

" Change the mapleader from \ to ,
let mapleader=","

" Easy window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" Clears the search register by typing ',' then '/'
nmap <silent> <leader>/ :nohlsearch<CR>

" Quickly get out of insert mode by typing 'jk'
inoremap jk <Esc>


" Filetype specific handling.
" (Only do this part when compiled with support for autocommands.)
"
"
if has("autocmd")

    " Turn off 'spaces instead of tabs' for editing makefiles
    autocmd FileType make setlocal noexpandtab

    " Wrap text to 80 chars in *.txt files.
    autocmd BufRead,BufNewFile *.txt set textwidth=80

endif " has("autocmd")


" NERDCommenter settings
"
"
let NERDSpaceDelims=1             " Insert a space after each comment character.
let NERDDefaultAlign='start'      " Align comments at index 0 on toggle.



" This is here so that tmux will send xterm-style keys when its xterm-keys option is on.
if &term =~ '^screen'
    execute "set <xUp>=\e[1;*A"
    execute "set <xDown>=\e[1;*B"
    execute "set <xRight>=\e[1;*C"
    execute "set <xLeft>=\e[1;*D"
endif


" Alt-j/k inserts blank line below/above current line.
nnoremap <silent><A-j> :put =''<CR>
nnoremap <silent><A-k> :put! =''<CR>


" Change cursor in terminal vim (and under tmux).
if &term =~ '^xterm' || &term =~ '^screen'

    " 1 or 0 -> blinking block
    " 2 -> solid block
    " 3 -> blinking underscore
    " 4 -> solid underscore

    " Solid underscore in insert mode
    let &t_SI .= "\<Esc>[4 q"

    " Blinking block in command mode
    let &t_EI .= "\<Esc>[1 q"

endif


" Fix for weird iskeyword settings.
set iskeyword-=-
set iskeyword-=+
